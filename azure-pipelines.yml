# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# validating build at all 

trigger:
- '*'

pool:
  vmImage: ubuntu-18.04
  demands: 
    - npm
    

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '5.x'
  

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs: 
    packageType: sdk
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run NPM install'
  inputs: 
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

<<<<<<< HEAD
- script: 'echo "$(Build.DefinitionNAme), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'  
  displayName: 'Write Build Info'
  workingDirectory: $(wwwrootDir)

=======
>>>>>>> master
- task: DotNetCoreCLI@2
  displayName: 'Restore Project Dependencies'
  inputs: 
    command: 'restore'
    projects: '**/*.csproj'

<<<<<<< HEAD
- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'
=======
- script: 'echo "$(Build.DefinitionNAme), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'  
  displayName: 'Write Build Info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true
>>>>>>> master

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
<<<<<<< HEAD
=======

>>>>>>> master
